sk_test_51S0FqC9NH5J0nkPNlG8ZiSGmRyVj133S4oFuBlyfCSZJyYi7ujeoFphDsuf0hb7ierEpy1QMQVeaovnDnG1Aw6pf00SJWU75Ko==>STRIPE_SECRET_KEY


<tr
          key={propInfo._id || idx}
          className="font-Nunito_Sans text-C_LightGray"
        >
          <td className="text-center">idx + 1</td>
          <td>
            {/* <Link to={`/propertyDetails/${_id}`}> */}
            <div className="flex items-center gap-3">
              <div className="avatar">
                <div className="mask mask-squircle h-12 w-12">
                  {/* <img
                  src={
                    images
                      ? images[0]
                      : "https://i.ibb.co.com/jkGkX8fs/default-user.png"
                  }
                  alt="Avatar Tailwind CSS Component"
                /> */}
                </div>
              </div>
              <div>
                {/* <div className="font-bold uppercase">{title.slice(0, 20)}...</div> */}
                <div className="text-sm opacity-50">{propInfo._id}</div>
              </div>
            </div>
            {/* </Link> */}
          </td>
          <td className="capitalize text-C_LightGray/90">name</td>
          {/* <td className="capitalize text-C_LightGray/90">{category}</td> */}

          <td className="text-C_LightGray/90">Unpaid</td>
          <td className="text-C_LightGray/90">priceâ‚¬</td>
          <td className="text-center">
            {/* <button
          onClick={(e) => handleChangeApproval(e)}
          className="cursor-pointer bg-yellow-200 text-yellow-800  py-[5px] px-[16px] rounded-3xl"
        >
          {approval && approval === "Pending" ? "Pending" : "Approved"}
        </button> */}

            <select
              className="border-[1px] px-5 py-2 border-C_purple  focus:border-[1px] focus:outline-0 rounded-lg  focus:rounded-lg"
              // onChange={(e) => handleApproval(e, _id)}
              // defaultValue={approval}
            >
              <option value="Pending">Pending</option>
              <option value="Approved">Approved</option>
            </select>

            {/* {approval && approval === "Pending" ? (
          <button
            onClick={(e) => handleChangeApproval(e)}
            className="cursor-pointer bg-yellow-200 text-yellow-800  py-[5px] px-[16px] rounded-3xl"
          >
            Pending
          </button>
        ) : (
          <button
            onClick={(e) => handleChangeApproval(e)}
            className="cursor-pointer bg-green-200 text-green-700 py-[5px] px-[16px] rounded-3xl"
          >
            Approved
          </button>
        )} */}
          </td>

          <td>
            {/* <button
          onClick={() => handleDeleteProperty(_id)}
          className="btn bg-red-200 text-red-700 py-[1px] px-[16px] rounded-lg"
        >
          <RiDeleteBinLine className="text-lg" />
        </button> */}
          </td>
        </tr>